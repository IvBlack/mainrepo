<?php

session_start();//запускаем механизм сессии

//массив, куда мы будем помещать наши данные из формы на сайте
//без валидации
$data = [
    'name' => '',
    'email' => '',
    'product' => '',
    'price' => '',
];

//если не пуст массив POST, то наши данные пришли из формы на сайте
//ключи массива совпадают с именами полей формы
if(!empty($_POST)){
    require_once 'db.php';//подключение БД
    $data = load($data);//массив POST  с данными от поекпателя
    debug($data);
    $order_id = save('orders', $data);//сохраняет даные в тадлицу orders
    setPaymentData($order_id);//записали в сессию id и цену товара
    header('Location: pages/form.php');//редирект на страницу оплаты заказа
    die;
   
}

function setPaymentData($order_id){
    if(isset($_SESSION['payment'])) unset($_SESSION['payment']);
       $_SESSION['payment']['id'] = $order_id;
       $_SESSION['payment']['price'] = $_POST['price'];
}

//загрузка данных из нашей формы в массив data
#параметром приходит пустой массив $data
#проходимся по массиву, проверяем ключ-значение
#существует ли ключ со значением в массиве POST из массива data
#если существует, то запишем значения ключей в массив data
function load($data){
    foreach($_POST as $k => $v){
        if(array_key_exists($k, $data)){
            $data[$k] = $v;
        }
    }
    return $data;
}

//сохранить данные с помощью REdBean, создаем бин
//вызываем метод dispence
//записываем в объект $tbl данные из нашего, уже заполненного  массива
function save($table, $data){
    $tbl = R::dispense($table);
    foreach($data as $k => $v){
        $tbl->$k = $v;
    }
   return R::store($tbl);//метод сохраняет данные в $tbl, сохраняет id записи
    //поэтому возвращем его в функцию для дальнейшего использования, строка 20
    
}

//для отладки отображения
function debug($data){
    echo '<pre>';
    print_r($data);
    echo  '</pre>';
}

#Как работает система:
/*Когда юзер нажмает кнопку Купить (интеренет-магазин с корзиной и тд.), мы должны как-то обработать заказ, сохранить его, сохранить товары, которые привязаны к заказу и получить номер заказа (либо уникальный номер, строку), который будет явно идентифицировать заказ. После этого отправляем пользователя на страницу оплаты. Делается след.образом: запоминаем нужные данные в сессию, отправляем на страницу оплаты (форма в нашем случае, которую сгенерировала Интеркасса либо же это может быть форма кошелька типа WebMoney), куда мы подставляем ID кассы/кошелька

<input type="hidden" name="ik_co_id" value="51237daa8f2a2d8413000000"/>

далее - ID заказа, сумму, валюту, описание + кнопка Оплатить

<input type="hidden" name="ik_pm_no" value="ID_4233"/>
  <input type="hidden" name="ik_am" value="1.44"/>
  <input type="hidden" name="ik_cur" value="uah"/>
  <input type="hidden" name="ik_desc" value="Payment Description"/>
  <input type="submit" value="Pay">
  
далее делается задержка отправки формы /предотвращение хищения страницы/.
Платежная система, произведя оплату, отправляет нам ответ, который мы принимаем по адресу /process.php/, где мы формируем нужные нам переменные /ключ, id кассы, и из POST наши данные/ 

$key = 'uc18larViw9UYbsa';
$ik_id = '51237daa8f2a2d8413000000';
$dataSet = $_POST;

Далее мы сформируем подпись:

unset($dataSet['ik_sign']); //удаляется значение
ksort($dataSet, SORT_STRING); 
array_push($dataSet, $key); //выбирается ключ $key
$signString = implode(':', $dataSet); //формируется строка с разделителем
$sign = base64_encode(md5($signString, true)); //кодируется

Получаем данные заказа

$order = R::load('orders', (int)$dataSet['ik_pm_no']);
if(!$order){
    die;
    
Делаем необходимые проверки

если статус платежа не совпадает
или сумма не соответствует заявленной
или номер кассы
или если подпись не соответствует той, которую мы сформировали, то в этом случае мы прекращаем работу.
Если все ок, то меняем статус заказа на оплаченный и заносим все это в базу:

$order->status = '1';
//сохраняем состояние объекта в БД
R::store($order);
*/


